version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_upwork
    environment:
      POSTGRES_USER: upwork_user
      POSTGRES_PASSWORD: upwork_pass
      POSTGRES_DB: upwork_jobs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro
    networks:
      - upwork_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U upwork_user -d upwork_jobs"]
      interval: 5s
      timeout: 5s
      retries: 5

  python-service:
    build:
      context: ./python-service
      dockerfile: Dockerfile
    container_name: python_service
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./python-service:/app
    environment:
      - DATABASE_URL=postgresql://upwork_user:upwork_pass@postgres:5432/upwork_jobs
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - upwork_net

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    ports:
      - "5678:5678"
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=upwork_jobs
      - DB_POSTGRESDB_USER=upwork_user
      - DB_POSTGRESDB_PASSWORD=upwork_pass
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin123
      - GENERIC_TIMEZONE=Europe/Berlin
      - N8N_HOST=n8n
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678/
    volumes:
      - ./n8n:/home/node/.n8n
    depends_on:
      - postgres
      - python-service
    networks:
      - upwork_net

volumes:
  postgres_data:

networks:
  upwork_net:
    driver: bridge
